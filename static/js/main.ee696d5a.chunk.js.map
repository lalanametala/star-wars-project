{"version":3,"sources":["helpers/logo.svg","helpers/Star_Wars_original_opening_crawl_1977.mp3","context/AppContext.js","helpers/index.js","components/Filters.js","components/Header.js","components/SortingForm.js","components/Table.js","components/Welcome.js","services/fetchPlanets.js","context/AppProvider.js","App.js","index.js"],"names":["module","exports","AppContext","createContext","tableHeading","columnFilters","nameSorter","a","b","name","ascSorter","value","descSorter","removeDash","category","splitted","split","length","Filters","pageRefs","useContext","nameFilter","setNameFilter","newNumericFilter","numericFilters","removeNumericFilter","setNumericFilters","useState","columnFilter","setColumnFilter","comparisonFilter","setComparisonFilter","filterNumValue","setFilterNumValue","columnFilterOptions","setColumnFilterOptions","handleInputChange","target","handleSelectChange","handleRemoveFilter","currentTarget","className","ref","el","current","filters","onChange","data-testid","placeholder","htmlFor","map","filterOption","key","type","onClick","newFilterOpt","filter","opt","column","comparison","disabled","toEnglish","id","Header","Audio","song","audio","isPlaying","setIsPlaying","useEffect","play","scrollIntoView","behavior","title","src","logo","alt","pause","SortingForm","setOrder","columnSorter","setColumnSorter","sortOrder","setSortOrder","checked","sort","Table","data","heading","rotationPeriod","rotation_period","orbitalPeriod","orbital_period","diameter","climate","gravity","terrain","surfaceWater","surface_water","population","films","created","edited","url","Welcome","renderLongtime","setRenderLongTime","timer","setTimeout","clearTimeout","getPlanets","fetch","response","json","results","AppProvider","children","setData","planets","setPlanets","order","dataClone","setDataClone","setPlanetsAPI","newData","lowerCaseFilter","toLowerCase","reduce","acc","index","filterCallback","planet","comparisonValue","Number","includes","filterByNumberAndName","mappedData","orderedData","knownData","unknownData","sortArray","Provider","newFilter","removedFilter","updatedFilters","App","useRef","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee696d5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.37da0be5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Star_Wars_original_opening_crawl_1977.4d642cf9.mp3\";","import { createContext } from 'react';\n\nconst AppContext = createContext();\n\nexport default AppContext;\n","export const tableHeading = ['Name',\n  'Rotation Period',\n  'Orbital Period',\n  'Diameter',\n  'Climate',\n  'Gravity',\n  'Terrain',\n  'Surface Water',\n  'Population',\n  'Films',\n  'Created',\n  'Edited',\n  'URL'];\n\nexport const columnFilters = [\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\n\nexport const nameSorter = (a, b) => {\n  const minusOne = -1;\n  if (a.name > b.name) {\n    return 1;\n  }\n  if (a.name < b.name) {\n    return minusOne;\n  }\n  return 0;\n};\n\nconst MINUS_ONE = -1;\n\nexport const ascSorter = (a, b) => {\n  if (+a.value > +b.value) {\n    return 1;\n  }\n  if (+a.value < +b.value) {\n    return MINUS_ONE;\n  }\n  return 0;\n};\n\nexport const descSorter = (a, b) => {\n  if (+a.value < +b.value) {\n    return 1;\n  }\n  if (+a.value > +b.value) {\n    return MINUS_ONE;\n  }\n  return 0;\n};\n\nexport const removeDash = (category) => {\n  const splitted = category.split('_');\n  if (splitted.length === 1) return splitted[0];\n  return `${splitted[0]} ${splitted[1]}`;\n};\n","import PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport { BsTrash } from 'react-icons/bs';\nimport { RiFilterFill, RiFilterOffFill } from 'react-icons/ri';\nimport AppContext from '../context/AppContext';\nimport { columnFilters, removeDash } from '../helpers';\nimport './Filters.css';\n\nfunction Filters({ pageRefs }) {\n  const {\n    nameFilter,\n    setNameFilter, newNumericFilter, numericFilters,\n    removeNumericFilter, setNumericFilters,\n  } = useContext(AppContext);\n\n  const [columnFilter, setColumnFilter] = useState('population');\n  const [comparisonFilter, setComparisonFilter] = useState('maior que');\n  const [filterNumValue, setFilterNumValue] = useState(0);\n  const [columnFilterOptions, setColumnFilterOptions] = useState(columnFilters);\n\n  const handleInputChange = ({ target: { value, name } }) => {\n    if (name === 'name-filter') setNameFilter(value);\n    if (name === 'filter-num-value') setFilterNumValue(value);\n  };\n\n  const handleSelectChange = ({ target: { value, name } }) => {\n    if (name === 'column') setColumnFilter(value);\n    if (name === 'comparison') setComparisonFilter(value);\n  };\n\n  const handleFilterClick = () => {\n    const newFilterOpt = columnFilterOptions.filter((opt) => opt !== columnFilter);\n    setColumnFilterOptions(newFilterOpt);\n    setColumnFilter(newFilterOpt[0]);\n    newNumericFilter({\n      column: columnFilter, comparison: comparisonFilter, value: filterNumValue,\n    });\n  };\n\n  const handleRemoveFilter = ({ currentTarget: { name } }) => {\n    setColumnFilterOptions([...columnFilterOptions, name]);\n    removeNumericFilter(name);\n  };\n\n  const handleRemoveAllFilters = () => {\n    setNumericFilters([]);\n  };\n\n  const generateOptions = () => (\n    <>\n      <option value=\"maior que\">GREATER THAN</option>\n      <option value=\"menor que\">LESS THAN</option>\n      <option value=\"igual a\">EQUAL TO</option>\n    </>\n  );\n\n  const toEnglish = (comparison) => {\n    switch (comparison) {\n    case 'maior que':\n      return 'GREATER THAN';\n    case 'menor que':\n      return 'LESS THAN';\n    default:\n      return 'EQUAL TO';\n    }\n  };\n\n  return (\n    <div className=\"filters-div\">\n      <h1 ref={ (el) => { pageRefs.current = { ...pageRefs.current, filters: el }; } }>\n        STAR WARS PLANETS\n      </h1>\n      <input\n        onChange={ handleInputChange }\n        name=\"name-filter\"\n        className=\"name-filter\"\n        value={ nameFilter }\n        data-testid=\"name-filter\"\n        placeholder=\"PLANET NAME\"\n      />\n      <fieldset className=\"filters-form\">\n        <legend>FILTERS</legend>\n        <form\n          className=\"non-name-filters\"\n        >\n          <label className=\"filter-label\" htmlFor=\"column\">\n            COLUMN\n            <select\n              value={ columnFilter }\n              data-testid=\"column-filter\"\n              onChange={ handleSelectChange }\n              name=\"column\"\n            >\n              {columnFilterOptions.map((filterOption) => (\n                <option key={ filterOption } value={ filterOption }>\n                  {removeDash(filterOption)}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label className=\"filter-label\" htmlFor=\"comparison\">\n            COMPARISON\n            <select\n              data-testid=\"comparison-filter\"\n              onChange={ handleSelectChange }\n              value={ comparisonFilter }\n              name=\"comparison\"\n            >\n              {generateOptions()}\n            </select>\n          </label>\n          <label className=\"filter-label\" htmlFor=\"filter-num-value\">\n            VALUE\n            <input\n              data-testid=\"value-filter\"\n              type=\"number\"\n              name=\"filter-num-value\"\n              value={ filterNumValue }\n              onChange={ handleInputChange }\n            />\n          </label>\n          <button\n            type=\"button\"\n            onClick={ handleFilterClick }\n            data-testid=\"button-filter\"\n            disabled={ columnFilterOptions.length <= 0 }\n          >\n            <RiFilterFill />\n            FILTER\n          </button>\n          <button\n            type=\"button\"\n            onClick={ handleRemoveAllFilters }\n            data-testid=\"button-remove-filters\"\n          >\n            <RiFilterOffFill />\n            REMOVE FILTERS\n          </button>\n        </form>\n        {numericFilters.length > 0\n          && numericFilters.map(({ column, comparison, value }) => (\n            <div data-testid=\"filter\" className=\"added-filter\" key={ `${column}Filter` }>\n              <p>{`${removeDash(column)} ${toEnglish(comparison)} ${value}`}</p>\n              <button\n                type=\"button\"\n                name={ column }\n                onClick={ handleRemoveFilter }\n              >\n                <BsTrash className=\"trash-icon\" id={ column } />\n              </button>\n            </div>\n          ))}\n      </fieldset>\n    </div>\n  );\n}\n\nFilters.propTypes = {\n  pageRefs: PropTypes.objectOf(PropTypes.element).isRequired,\n};\n\nexport default Filters;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { AiOutlineArrowDown } from 'react-icons/ai';\nimport { MdMusicNote, MdMusicOff } from 'react-icons/md';\nimport logo from '../helpers/logo.svg';\nimport song from '../helpers/Star_Wars_original_opening_crawl_1977.mp3';\nimport './Header.css';\n\nfunction Header({ pageRefs }) {\n  const [audio] = useState(new Audio(song));\n  const [isPlaying, setIsPlaying] = useState(true);\n\n  useEffect(() => {\n    audio.play();\n  }, [audio]);\n\n  const audioToggle = () => {\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const handleScroll = () => {\n    pageRefs.current.filters.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <header>\n      <button\n        type=\"button\"\n        className=\"table-focus\"\n        onClick={ handleScroll }\n        title=\"Ir para a aplicação\"\n      >\n        <AiOutlineArrowDown />\n      </button>\n      <section className=\"logo\">\n        <img src={ logo } alt=\"star wars logo\" />\n      </section>\n      <button\n        type=\"button\"\n        onClick={ audioToggle }\n        className=\"music-btn\"\n        title=\"Sound On/Off\"\n      >\n        {isPlaying\n          ? (<MdMusicNote />)\n          : (<MdMusicOff />)}\n      </button>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  pageRefs: PropTypes.objectOf(PropTypes.element).isRequired,\n};\n\nexport default Header;\n","import React, { useContext, useState } from 'react';\nimport AppContext from '../context/AppContext';\nimport { columnFilters, removeDash } from '../helpers';\nimport './SortingForm.css';\n\nfunction SortingForm() {\n  const { setOrder } = useContext(AppContext);\n\n  const [columnSorter, setColumnSorter] = useState('population');\n  const [sortOrder, setSortOrder] = useState('ASC');\n\n  const handleInputChange = ({ target: { value } }) => {\n    setSortOrder(value);\n  };\n\n  const handleSelectChange = ({ target: { value } }) => {\n    setColumnSorter(value);\n  };\n\n  const handleSorterClick = () => {\n    setOrder({\n      column: columnSorter, sort: sortOrder,\n    });\n  };\n\n  const generateRadio = () => (\n    <div className=\"radio-container\">\n      <label htmlFor=\"sort-asc\" className=\"rad-label\">\n        <input\n          data-testid=\"column-sort-input-asc\"\n          type=\"radio\"\n          id=\"sort-asc\"\n          name=\"sort-asc\"\n          value=\"ASC\"\n          className=\"rad-input\"\n          checked={ sortOrder === 'ASC' }\n          onChange={ handleInputChange }\n        />\n        <div className=\"rad-design\" />\n        <div className=\"rad-text\">ASCENDENT</div>\n      </label>\n      <label htmlFor=\"sort-desc\" className=\"rad-label\">\n        <input\n          data-testid=\"column-sort-input-desc\"\n          type=\"radio\"\n          id=\"sort-desc\"\n          name=\"sort-desc\"\n          value=\"DESC\"\n          className=\"rad-input\"\n          checked={ sortOrder === 'DESC' }\n          onChange={ handleInputChange }\n        />\n        <div className=\"rad-design\" />\n        <div className=\"rad-text\">DESCENDENT</div>\n      </label>\n    </div>\n  );\n\n  return (\n    <fieldset className=\"sort-fieldset\">\n      <legend>SORT</legend>\n      <form className=\"sort-form\">\n        <label htmlFor=\"column-sort\" className=\"filter-label\">\n          COLUMN\n          <select\n            value={ columnSorter }\n            data-testid=\"column-sort\"\n            onChange={ handleSelectChange }\n          >\n            {columnFilters.map((filterOption) => (\n              <option key={ `sort-${filterOption}` } value={ filterOption }>\n                {removeDash(filterOption)}\n              </option>\n            ))}\n          </select>\n        </label>\n        <div>\n          <div className=\"radio-outer-container\">\n            <div className=\"filter-label\">ORDER</div>\n            {generateRadio()}\n          </div>\n        </div>\n      </form>\n      <button\n        type=\"button\"\n        onClick={ handleSorterClick }\n        data-testid=\"column-sort-button\"\n      >\n        SORT\n      </button>\n    </fieldset>\n  );\n}\n\nexport default SortingForm;\n","import React, { useContext } from 'react';\nimport AppContext from '../context/AppContext';\nimport { tableHeading } from '../helpers';\nimport './Table.css';\n\nfunction Table() {\n  const { data } = useContext(AppContext);\n  return (\n    <div className=\"table-container\">\n      <table>\n        <thead>\n          <tr>\n            {tableHeading.map((heading) => (\n              <th key={ heading }>{heading}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {data\n            .map(({\n              name, rotation_period: rotationPeriod,\n              orbital_period: orbitalPeriod, diameter, climate, gravity,\n              terrain, surface_water: surfaceWater, population, films,\n              created, edited, url,\n            }) => (\n              <tr key={ name }>\n                <td data-testid=\"planet-name\">{name}</td>\n                <td>{rotationPeriod}</td>\n                <td>{orbitalPeriod}</td>\n                <td>{diameter}</td>\n                <td>{climate}</td>\n                <td>{gravity}</td>\n                <td>{terrain}</td>\n                <td>{surfaceWater}</td>\n                <td>{population}</td>\n                <td>{films}</td>\n                <td>{created}</td>\n                <td>{edited}</td>\n                <td>{url}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useEffect, useState } from 'react';\nimport logo from '../helpers/logo.svg';\nimport './Welcome.css';\n\nfunction Welcome() {\n  const [renderLongtime, setRenderLongTime] = useState(true);\n\n  useEffect(() => {\n    const timeout = 2000;\n    const timer = setTimeout(() => {\n      setRenderLongTime(false);\n    }, timeout);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <section className=\"welcome\">\n      {renderLongtime\n      && (\n        <h1 className=\"intro-text\">\n          A Long Time Ago, in a galaxy far,\n          <br />\n          {' '}\n          far away…\n        </h1>\n      )}\n      <div className=\"logo\"><img src={ logo } alt=\"star wars logo\" /></div>\n      <div className=\"text-board\">\n        <div className=\"text-content\">\n          <p className=\"text-title\">Episode XVII</p>\n          <p className=\"text-subtitle\">REACT HOOKS</p>\n          <br />\n          <p>\n            Turmoil has engulfed the Galactic Empire as Lalá Nametala\n            keeps on studying to become a master in her trade.\n          </p>\n          <p>\n            {`In her quest for knowledge, Lalá has developed this application applying\n            the subjects from Block XVII at Trybe's Web Development course:\n            Context API and Hooks.`}\n          </p>\n          <p>\n            This ultimate application lists and filters planets from the Galactic Empire.\n          </p>\n          <p>\n            This future Web Developer heads to the BackEnd module hoping to\n            learn its hidden trades and restore freedom to the galaxy….\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Welcome;\n","const getPlanets = async () => {\n  const response = await fetch('https://swapi-trybe.herokuapp.com/api/planets/');\n  const data = await response.json();\n  return data.results;\n};\n\nexport default getPlanets;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { ascSorter, descSorter, nameSorter } from '../helpers';\nimport getPlanets from '../services/fetchPlanets';\nimport AppContext from './AppContext';\n\nfunction AppProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [numericFilters, setNumericFilters] = useState([]);\n  const [order, setOrder] = useState({});\n  const [dataClone, setDataClone] = useState([]);\n\n  useEffect(() => {\n    const setPlanetsAPI = async () => {\n      const results = await getPlanets();\n      results.sort(nameSorter);\n      setData(results);\n      setDataClone(results);\n      setPlanets(results);\n    };\n    setPlanetsAPI();\n  }, []);\n\n  useEffect(() => {\n    const filterByNumberAndName = () => {\n      const reduceCallback = (acc, { column, comparison, value }, index) => {\n        const filterCallback = (planet) => {\n          const comparisonValue = Number(planet[column]);\n          if (comparison === 'maior que') return comparisonValue > value;\n          if (comparison === 'menor que') return comparisonValue < value;\n          return comparisonValue === Number(value);\n        };\n        if (index === 0) {\n          acc = planets.filter(filterCallback);\n          return acc;\n        }\n        return acc.filter(filterCallback);\n      };\n      let newData = [];\n      const lowerCaseFilter = nameFilter.toLowerCase();\n      if (numericFilters.length !== 0) {\n        newData = numericFilters\n          .reduce(reduceCallback, []).filter(({ name }) => {\n            const nameLowerCase = name.toLowerCase();\n            return nameLowerCase.includes(lowerCaseFilter);\n          });\n      } else {\n        newData = planets.filter(({ name }) => {\n          const nameLowerCase = name.toLowerCase();\n          return nameLowerCase.includes(lowerCaseFilter);\n        });\n      }\n      setData(newData);\n      setDataClone(newData);\n    };\n    filterByNumberAndName();\n  }, [nameFilter, numericFilters, planets]);\n\n  const newNumericFilter = (newFilter) => {\n    setNumericFilters([...numericFilters, newFilter]);\n  };\n\n  const removeNumericFilter = (removedFilter) => {\n    const updatedFilters = numericFilters\n      .filter(({ column }) => column !== removedFilter);\n    setNumericFilters(updatedFilters);\n  };\n\n  useEffect(() => {\n    const sortArray = () => {\n      const { column, sort } = order;\n      const mappedData = dataClone.map((planet, index) => ({\n        value: planet[column],\n        index,\n      }));\n      if (sort === 'ASC') mappedData.sort(ascSorter);\n      if (sort === 'DESC') mappedData.sort(descSorter);\n      const orderedData = mappedData.map(({ index }) => dataClone[index]);\n      const knownData = orderedData.filter((planet) => planet[column] !== 'unknown');\n      const unknownData = orderedData.filter((planet) => planet[column] === 'unknown');\n      return [...knownData, ...unknownData];\n    };\n    setData(sortArray());\n  }, [dataClone, order]);\n\n  return (\n    <AppContext.Provider\n      value={ {\n        data,\n        setNameFilter,\n        newNumericFilter,\n        numericFilters,\n        removeNumericFilter,\n        setNumericFilters,\n        setOrder,\n      } }\n    >\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AppProvider;\n","import React, { useRef } from 'react';\nimport './App.css';\nimport Filters from './components/Filters';\nimport Header from './components/Header';\nimport SortingForm from './components/SortingForm';\nimport Table from './components/Table';\nimport Welcome from './components/Welcome';\nimport AppProvider from './context/AppProvider';\n\nfunction App() {\n  const pageRefs = useRef({});\n\n  return (\n    <AppProvider>\n      <Header pageRefs={ pageRefs } />\n      <Welcome />\n      <main>\n        <Filters pageRefs={ pageRefs } />\n        <SortingForm />\n        <Table />\n      </main>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App className=\"app\" />, document.getElementById('root'));\n"],"sourceRoot":""}